<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:mvc="http://www.springframework.org/schema/mvc"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
http://www.springframework.org/schema/beans/spring-beans-4.3.xsd
http://www.springframework.org/schema/context
http://www.springframework.org/schema/context/spring-context-4.3.xsd
http://www.springframework.org/schema/mvc
http://www.springframework.org/schema/mvc/spring-mvc-4.3.xsd
http://www.springframework.org/schema/aop
http://www.springframework.org/schema/aop/spring-aop.xsd">


    <!--<mvc:interceptors>-->
        <!--<bean class="wpk.web.security.WeixinAutoLoginInterceptor"/>-->
        <!--<bean class="wpk.web.security.AuthorizeInterceptor"/>-->
        <!--<mvc:interceptor>-->
            <!--<mvc:mapping path="/app/**"/>-->
            <!--<mvc:exclude-mapping path="/app/login*"/>-->
            <!--<bean class="wpk.web.security.PvUvInterceptor"/>-->
        <!--</mvc:interceptor>-->
    <!--</mvc:interceptors>-->

    <bean id="appProperties" class="org.springframework.beans.factory.config.PropertiesFactoryBean">
        <property name="locations">
            <list>
                <value>/WEB-INF/app.properties</value>
            </list>
        </property>
    </bean>

    <!-- 启动注解驱动的Spring MVC功能，注册请求url和注解POJO类方法的映射-->
    <mvc:annotation-driven>
        <mvc:message-converters register-defaults="false">
            <bean class="org.springframework.http.converter.StringHttpMessageConverter">
                <property name="writeAcceptCharset" value="false"/>
                <property name="supportedMediaTypes">
                    <list>
                        <value>text/plain;charset=UTF-8</value>
                        <value>text/html;charset=UTF-8</value>
                    </list>
                </property>
            </bean>
            <bean class="org.springframework.http.converter.ByteArrayHttpMessageConverter"/>
            <bean class="org.springframework.http.converter.ResourceHttpMessageConverter"/>
            <!-- 配置fastjson中实现HttpMessageConverter接口的转换器 -->
            <!-- FastJsonHttpMessageConverter是fastjson中实现了HttpMessageConverter接口的转换器 -->
            <bean id="fastJsonHttpMessageConverter"
                  class="com.alibaba.fastjson.support.spring.FastJsonHttpMessageConverter">
                <!-- 加入支持的媒体类型：返回contentType -->
                <property name="supportedMediaTypes">
                    <list>
                        <value>application/json;charset=UTF-8</value>
                    </list>
                </property>
                <property name="features">
                    <list>
                        <value>WriteMapNullValue</value>
                        <value>WriteNullStringAsEmpty</value>
                        <value>DisableCircularReferenceDetect</value>
                    </list>
                </property>
            </bean>
        </mvc:message-converters>

    </mvc:annotation-driven>


    <mvc:default-servlet-handler/>
    <!--<bean id="appListerner" class="wpk.web.MvcApplicationListner"/>-->


    <!-- 启动包扫描功能，以便注册带有@Controller、@service、@repository、@Component等注解的类成为spring的bean -->
    <!--<context:component-scan base-package="wpk"/>-->

    <!--开始Spring aop-->
    <aop:aspectj-autoproxy proxy-target-class="true"/>


    <!-- 对模型视图名称的解析，在请求时模型视图名称添加前后缀 -->

    <!--<bean class="org.springframework.web.servlet.view.UrlBasedViewResolver">-->
        <!--<property name="viewClass" value="org.springframework.web.servlet.view.tiles3.TilesView"/>-->
    <!--</bean>-->
    <!--<bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">-->
        <!--<property name="viewClass" value="org.springframework.web.servlet.view.JstlView"/>-->
    <!--</bean>-->
    <!--<bean id="multipartResolver" class="org.springframework.web.multipart.commons.CommonsMultipartResolver">-->
        <!--<property name="maxUploadSize" value="100000000"/>-->
    <!--</bean>-->
    <!--<bean class="org.springframework.web.servlet.view.tiles3.TilesConfigurer">-->
        <!--<property name="definitions">-->
            <!--<list>-->
                <!--<value>/WEB-INF/tiles/*.xml</value>-->
            <!--</list>-->
        <!--</property>-->
    <!--</bean>-->

</beans>